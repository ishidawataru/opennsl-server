#!/bin/bash
# Generates makefile dependencies for files in $PWD which look like
# they are mocable. This does not create any rules for actually
# creating moc files.
#
# Usage:
#  $0 [moc_prefix]
# where moc_prefix defaults to 'moc_', and is used to name
# output files.

MOC_PRE=${1-moc_}

ARGS="$@"
headers=$(ls *.h *.hpp *.hxx 2>/dev/null)
test x = "x$headers" && exit 0


cat <<EOF
############################################################
# moc dependency rules generated by:
# $0 $@
EOF
for H in ${headers}; do
    if ! grep -l "Q_OBJECT" $H &>/dev/null; then
        continue
    fi
    base=${H%%.h*}
    base=${base##${MOC_PRE}}
    mocbase="${MOC_PRE}${base}"
    mocpp="${mocbase}.cpp"
    mocobj="${mocbase}.o"
    echo "${mocpp}: ${H}"
    echo "${mocobj}: ${mocpp}"
    echo "CLEAN_FILES += ${mocpp} ${mocobj}"

done

cat <<EOF
# end moc dependency rules.
############################################################
EOF
